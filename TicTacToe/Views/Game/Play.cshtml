@model TicTacToe.Models.Game

@{
    ViewBag.Title = "Tic-Tac-Toe!";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <style>
        #game input[type="button"] {
            border: medium none;
            height: 70px;
            width: 70px;
        }


        #game input[type="button"]:hover {
            cursor: pointer;
        }

        .marked {
            background-color: #87C47E;
        }
    </style>
}

<h2>Hello Tic-Tac-Toe</h2>

<div>

    <div style="float:left;">
        <p>
            <span>Name</span>
            <input type="text" id="name" />
        </p>
        <p>
            <span>Game</span>
            <input type="text" id="game-name" value="@(Model != null ? Model.Name : String.Empty)" />
        </p>
        <p>
            <input type="button" id="refresh" value="Refresh" />
        </p>
    </div>

    <div style="float:left; margin-left: 100px;">
        <table id="game" style="display: none;">
            <thead>
                <tr>
                    <td></td>
                    <td align="center">A</td>
                    <td align="center">B</td>
                    <td align="center">C</td>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        <p><span id="turn"></span></p>
    </div>

    <div style="clear: both;"></div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        // Reference the auto-generated proxy for the hub.
        var game = $.connection.ticTacToeHub;

        $(function () {
            // Create a function that the hub can call back to update the game on the page.
            game.client.updateGameOnPage = function (game) {
                // 
                var $_gameTableBody = $('#game tbody');
                $_gameTableBody.empty();

                for (var x = 1; x < 4; x++) {
                    $_gameTableBody.append('<tr>');
                    $_gameTableBody.append('<td>' + x + '</td>');

                    for (var y = 1; y < 4; y++) {
                        $_gameTableBody.append('<td><input type="button" value="&nbsp" data-x="' + x + '" data-y="' + y + '" /></td>');
                    }

                    $_gameTableBody.append('</tr>');
                }

                if (game != null) {
                    for (i in game.Plays) {
                        var btn = $('#game tbody input[data-x="' + game.Plays[i].X + '"]input[data-y="' + game.Plays[i].Y + '"]');

                        btn.val(game.Plays[i].Mark);
                        btn.attr('disabled', 'disabled');
                        btn.addClass('marked');
                    }

                    var playerName = $('#name').val();

                    if (game.Status == 'DRAW') {
                        $('#turn').text("Draw.");
                        alert('Game finished. Draw.');
                    } else if (game.Status == 'FINISHED') {
                        $('#game tbody input').attr('disabled', 'disabled');
                        
                        if (game.Winner == playerName) {
                            $('#turn').text("Game finished. You won!");
                            alert('You won!');
                        } else {
                            $('#turn').text("Game finished. You lost!");
                            alert('You lost!');
                        }
                    } else {
                        // Check whether it is the current player's turn
                        if (game.Plays.length > 0) {
                            var lastPlay = game.Plays[game.Plays.length - 1];
                            if (lastPlay.PlayerName == playerName) {
                                $('#game tbody input').attr('disabled', 'disabled');
                                $('#turn').text("Other player's turn!");
                            } else {
                                $('#turn').text("Your turn!");
                            }
                        }
                    }

                    $('#game').show();
                }
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#refresh').click(function () {
                    // Call the Update method on the hub.
                    game.server.update($('#name').val(), $('#game-name').val(), 0, 0);
                });
            });
        });

        $(document).on('click', '#game tbody input[type="button"]', function () {
            var x = $(this).attr('data-x');
            var y = $(this).attr('data-y');

            game.server.update($('#name').val(), $('#game-name').val(), x, y);
        });
    </script>
}